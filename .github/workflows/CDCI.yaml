name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: continuous integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  delivery:
    name: continuous delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: login to Amazon ECR
        id: ECR-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.ECR-login.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deployment:
    name: continuous deployment
    needs: delivery
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: login to Amazon ECR
        id: ECR-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: pull latest image
        run: docker pull ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      # - name: stop and remove container if running
      #  run: docker ps -q --filter "name=summarization" | grep -q . && docker stop summarization && docker rm -fv summarization

      - name: run Docker image
        run: docker run -d -p 80:80 --name=summarization -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}'  ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
      - name: Clean the previous images and containers
        run: docker system prune -f
